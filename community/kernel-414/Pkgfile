makedepends=(yaolinux)

url="http://www.kernel.org"
description="The long term stable kernel version with virtualbox modules"

packager="Yaolinux Team"
maintainer="rems28"

PKGMK_IGNORE_UNPACK="yes"
PKGMK_NO_STRIP="yes"
PKGMK_GROUPS=(devel doc)

name=kernel-414
alias=(linux-lts)

version=4.14.154
_version=${version:0:4}

run=(yaolinux)

# Virtualbox
vb_version=5.2.12
buildrelease=122591
_VBARCH=amd64

## Download all the sources
#

source=($url/pub/linux/kernel/v4.x/linux-${_version}.tar.xz
        $url/pub/linux/kernel/v4.x/patch-$version.xz
        $name.config_64)

## Time to build everything
#

build(){

bsdtar -p -o -C $SRC -xf linux-${_version}.tar.xz

cd linux-${_version}

if [ -f ../patch-$version.xz ]; then
	xz -d -c  ../patch-$version.xz | patch -Np1
fi

make mrproper
cp ../$name.config_64 ./.config

# make menuconfig

make

cp .config ../$name.config_64

## Modules
#
# Kernel modules
make INSTALL_MOD_PATH=$PKG DEPMOD=/bin/true modules_install

KERNEL_VERSION="${version}-YaoLinuX-414"

# depmod needed
depmod -b $PKG -a ${KERNEL_VERSION}

# Install config and kernel files

mkdir -p $PKG/boot

cp -v System.map \
$PKG/boot/System_64.map-$version
cp  -v .config    \
$PKG/boot/config_64-$version
cp  -v arch/x86_64/boot/bzImage \
$PKG/boot/kernel-$version-YaoLinuX-414

# Reorgenise the sources
cd $PKG/lib/modules/${KERNEL_VERSION}/

mkdir -p $PKG/usr/src

mv $SRC/linux-${_version} $PKG/usr/src/
rm {build,source}

ln -sv /usr/src/linux-${_version} build
ln -sv /usr/src/linux-${_version} source

mkdir $SRC/linux-${_version}
mv $PKG/usr/src/linux-${_version}/Documentation \
$SRC/linux-${_version}

# Firmware are in linux-firmware
rm -rf $PKG/lib/firmware

# post-install autogen
echo 'LK="."
[ -L boot/kernel-414 ] && LK="`readlink boot/kernel-414`"
if [ "`dirname $LK`" != "." ]; then
  echo "This is a efi installation"
  ln -sf $LK boot/kernel-414
  if [ -f boot/$LK ]; then' > $PKGMK_ROOT/$name.post-install
echo "    mv boot/kernel-$version-YaoLinuX-414 boot/\$LK 2>/dev/null
    ln -sf \$LK boot/kernel-$version-YaoLinuX-414
  else
    echo \"EFI Partition not found, mount EFI Partition and re-install the kernel\"
  fi
else
  echo \"This is a bios installation\"
  if [ -L boot/initrd-414 ]; then
    mkinitramfs $version-YaoLinuX-414
    ln -sf initrd-$version-YaoLinuX-414 boot/initrd-414
  fi
  ln -sf kernel-$version-YaoLinuX-414 boot/kernel-414
fi" >> $PKGMK_ROOT/$name.post-install

# pre-install autogen
cd $SRC
if [ -f aaabasicfs-${AAABASICFS}.tar.xz ]; then
 bsdtar -p -o -C $SRC -xf aaabasicfs-${AAABASICFS}.tar.xz
 echo ". lib/lsb/init-functions" >  $PKGMK_ROOT/$name.pre-install
 for FILE in `tar --list --file aaabasicfs-${AAABASICFS}.tar.xz|grep -v /$`
 do
   echo "log_info_msg \"update $FILE\"" >> $PKGMK_ROOT/$name.pre-install
   echo "cat  > $FILE << \"END_OF_FILE\"" >> $PKGMK_ROOT/$name.pre-install
   cat $SRC/$FILE >> $PKGMK_ROOT/$name.pre-install
   echo "END_OF_FILE" >> $PKGMK_ROOT/$name.pre-install
   echo "evaluate_retval" >> $PKGMK_ROOT/$name.pre-install
 done
fi
}

devel() {

cd $PKG
for i in alpha arc arm arm26 arm64 avr32 blackfin c6x \
cris frv h8300 hexagon ia64 m32r m68k m68knommu metag \
mips microblaze mn10300 openrisc parisc powerpc ppc s390 \
score sh sh64 sparc sparc64 tile unicore32 um v850 xtensa
do rm -rf usr/src/linux-${_version}/arch/$i
done

bsdtar -cf \
$PKGMK_PACKAGE_DIR/$name.devel${PKGMK_BUILDVER}any.${PKGMK_PACKAGE_EXT} \
usr/src/linux-${_version}

rm -r usr
}

doc() {

cd $PKG
mkdir -p usr/share/doc
mv $SRC/linux-${_version}/Documentation \
usr/share/doc/linux-$version

bsdtar -cf \
$PKGMK_PACKAGE_DIR/$name.doc${PKGMK_BUILDVER}any.${PKGMK_PACKAGE_EXT} \
usr/share/doc/linux-$version

rm -r usr
}
